开始巡检系统资源使用情况...

		_   _      _ _         __        __        _   _
	   | \ | |    | | |  __  / _|  ___  \ \      / / | |
	   |  \| | ___| | | / _|| |_ / _ \   \ \ /\ / /| |_| |
	   | . \ |/ _ \ | | |  _||  _|  __/    \ V  V / |  _  |
	   |_| \_/\___/_|_| |_|  |_|  \___|      \_/\_/  |_| |_|
		

=====================================操作系统巡检======================================

### 远程系统CPU使用率:

+-----------+
| CPU使用率 |
+-----------+
| 1.6%      |
+-----------+

### 远程内存使用率:

+------------+
| 内存使用率 |
+------------+
| 26%        |
+------------+

建议: 
   > 注意检查业务中内存占用高的原因. 
### 远程输出磁盘IO情况:

+--------+---------------+
| 设备名 | 磁盘IO：%util |
+--------+---------------+
| sda    | 0.11          |
| sda    | 0.10          |
+--------+---------------+

+--------+---------------+
| 设备名 | 磁盘IO：%util |
+--------+---------------+
| dm-0   | 0.11          |
| dm-0   | 0.10          |
+--------+---------------+

+--------+---------------+
| 设备名 | 磁盘IO：%util |
+--------+---------------+
| dm-1   | 0.00          |
| dm-1   | 0.00          |
+--------+---------------+

建议: 
   > 注意检查IO占用高的原因.
### 远程文件系统使用情况:

+-----------------------+--------+----------+----------+----------+----------------+
|       文件系统        | 总大小 | 已用大小 | 可用大小 | 使用占比 |     挂载点     |
+-----------------------+--------+----------+----------+----------+----------------+
| Filesystem            | Size   | Used     | Avail    | Use%     | Mounted        |
| devtmpfs              | 7.8G   | 0        | 7.8G     | 0%       | /dev           |
| tmpfs                 | 7.8G   | 2.1M     | 7.8G     | 1%       | /dev/shm       |
| tmpfs                 | 7.8G   | 13M      | 7.8G     | 1%       | /run           |
| tmpfs                 | 7.8G   | 0        | 7.8G     | 0%       | /sys/fs/cgroup |
| /dev/mapper/rhel-root | 37G    | 12G      | 26G      | 31%      | /              |
| /dev/sda1             | 197M   | 160M     | 37M      | 82%      | /boot          |
| tmpfs                 | 1.6G   | 12K      | 1.6G     | 1%       | /run/user/42   |
| tmpfs                 | 1.6G   | 0        | 1.6G     | 0%       | /run/user/0    |
+-----------------------+--------+----------+----------+----------+----------------+

建议: 
   > 注意预留足够的空间给数据库. 
### 远程文件系统Inode使用情况:

+-----------------------+-----------+--------+------+----------+----------------+
|       文件系统        | inode容量 | 已使用 | 剩余 | 使用占比 |    挂载路径    |
+-----------------------+-----------+--------+------+----------+----------------+
| devtmpfs              | 2.0M      | 409    | 2.0M | 1%       | /dev           |
| tmpfs                 | 2.0M      | 5      | 2.0M | 1%       | /dev/shm       |
| tmpfs                 | 2.0M      | 1.5K   | 2.0M | 1%       | /run           |
| tmpfs                 | 2.0M      | 16     | 2.0M | 1%       | /sys/fs/cgroup |
| /dev/mapper/rhel-root | 19M       | 252K   | 19M  | 2%       | /              |
| /dev/sda1             | 75K       | 337    | 74K  | 1%       | /boot          |
| tmpfs                 | 2.0M      | 9      | 2.0M | 1%       | /run/user/42   |
| tmpfs                 | 2.0M      | 4      | 2.0M | 1%       | /run/user/0    |
+-----------------------+-----------+--------+------+----------+----------------+

说明：在一个文件系统中，每个文件和目录都需要占用一个inode。当inode耗尽时，即使磁盘空间还有剩余，也无法创建新的文件
建议: 
   > 时刻关注inode使用情况，及时清理无用文件和目录，释放inode空间。

=====================================数据库巡检重点关注的巡检项======================================


### TOP 10 数据库SIZE信息:

+----------+------------+-----------------+------+---------+
|  数据库  |    模式    |      表名       | 类型 |  大小   |
+----------+------------+-----------------+------+---------+
| postgres | public     | test_data       | r    | 89 MB   |
| postgres | public     | spatial_ref_sys | r    | 6896 kB |
| postgres | pg_catalog | pg_proc         | r    | 1152 kB |
| postgres | pg_catalog | pg_attribute    | r    | 584 kB  |
| postgres | pg_catalog | pg_description  | r    | 384 kB  |
| postgres | pg_catalog | pg_depend       | r    | 376 kB  |
| postgres | pg_catalog | pg_statistic    | r    | 232 kB  |
| postgres | pg_catalog | pg_collation    | r    | 224 kB  |
| postgres | pg_catalog | pg_type         | r    | 144 kB  |
| postgres | pg_catalog | pg_class        | r    | 136 kB  |
+----------+------------+-----------------+------+---------+

+--------+------------+-----------------+------+---------+
| 数据库 |    模式    |      表名       | 类型 |  大小   |
+--------+------------+-----------------+------+---------+
| test   | public     | spatial_ref_sys | r    | 6896 kB |
| test   | pg_catalog | pg_proc         | r    | 984 kB  |
| test   | pg_catalog | pg_attribute    | r    | 464 kB  |
| test   | pg_catalog | pg_description  | r    | 384 kB  |
| test   | pg_catalog | pg_depend       | r    | 288 kB  |
| test   | pg_catalog | pg_collation    | r    | 224 kB  |
| test   | pg_catalog | pg_statistic    | r    | 192 kB  |
| test   | pg_catalog | pg_operator     | r    | 128 kB  |
| test   | pg_catalog | pg_type         | r    | 120 kB  |
| test   | pg_catalog | pg_class        | r    | 112 kB  |
+--------+------------+-----------------+------+---------+

+--------+------------+----------------+------+--------+
| 数据库 |    模式    |      表名      | 类型 |  大小  |
+--------+------------+----------------+------+--------+
| tsbs   | public     | test_data      | r    | 89 MB  |
| tsbs   | pg_catalog | pg_proc        | r    | 928 kB |
| tsbs   | pg_catalog | pg_attribute   | r    | 568 kB |
| tsbs   | pg_catalog | pg_description | r    | 344 kB |
| tsbs   | pg_catalog | pg_collation   | r    | 224 kB |
| tsbs   | pg_catalog | pg_depend      | r    | 200 kB |
| tsbs   | pg_catalog | pg_statistic   | r    | 192 kB |
| tsbs   | pg_catalog | pg_class       | r    | 136 kB |
| tsbs   | pg_catalog | pg_type        | r    | 136 kB |
| tsbs   | pg_catalog | pg_operator    | r    | 112 kB |
+--------+------------+----------------+------+--------+

    建议:
        > 经验值: 单表超过8GB, 并且这个表需要频繁更新 或 删除+插入的话, 建议对表根据业务逻辑进行合理拆分后获得更好的性能, 以及便于对膨胀索引进行维护; 如果是只读的表, 建议适当结合SQL语句进行优化.


###  查找索引数超过4并且SIZE大于10MB的表

+----------+--------+-----------+--------+----------+
|  数据库  |  模式  |   表名    | 表大小 | 索引数量 |
+----------+--------+-----------+--------+----------+
| postgres | public | test_data | 89 MB  |        5 |
+----------+--------+-----------+--------+----------+

在数据库 test 中未查询到索引数超过4且SIZE大于10MB的表信息
+--------+--------+-----------+--------+----------+
| 数据库 |  模式  |   表名    | 表大小 | 索引数量 |
+--------+--------+-----------+--------+----------+
| tsbs   | public | test_data | 89 MB  |        5 |
+--------+--------+-----------+--------+----------+

   建议:
       > 索引数量太多, 影响表的增删改性能, 建议检查是否有不需要的索引.


###  重复创建的索引:

+----------+-----------+----------------------------------------------------------------------------------+
|  数据库  |   表名    |                                      索引名                                      |
+----------+-----------+----------------------------------------------------------------------------------+
| postgres | test_data | {test_data_pkey,test_data_pkey1,test_data_pkey2,test_data_pkey3,test_data_pkey4} |
+----------+-----------+----------------------------------------------------------------------------------+

在数据库 test 中未检测到重复创建的索引信息
+--------+-----------+----------------------------------------------------------------------------------+
| 数据库 |   表名    |                                      索引名                                      |
+--------+-----------+----------------------------------------------------------------------------------+
| tsbs   | test_data | {test_data_pkey,test_data_pkey3,test_data_pkey1,test_data_pkey2,test_data_pkey4} |
+--------+-----------+----------------------------------------------------------------------------------+

    建议:
        > 当创建重复索引后，不会对数据库的性能产生优化作用，反而会产生一些维护上的成本，请删除重复索引

###  上次巡检以来未使用或使用较少的索引:

+----------+------------+
|  数据库  | 未使用数量 |
+----------+------------+
| postgres |          3 |
+----------+------------+

在数据库 test 中未查询到上次巡检以来未使用或使用较少的索引信息
+--------+------------+
| 数据库 | 未使用数量 |
+--------+------------+
| tsbs   |          4 |
+--------+------------+

    建议:
        > 建议和应用开发人员确认后, 删除不需要的索引.

###  获取数据库统计信息,回滚比例, 命中比例, 数据块读写时间, 死锁, 复制冲突:

+-----------+----------+----------+--------------+--------------+----------+------+
|  数据库   | 回滚比例 | 命中比例 | 数据块读时间 | 数据块写时间 | 复制冲突 | 死锁 |
+-----------+----------+----------+--------------+--------------+----------+------+
|           | 0.00 %   | 99.90 %  |            0 |            0 |        0 |    0 |
| postgres  | 0.53 %   | 99.91 %  |            0 |            0 |        0 |    0 |
| test      | 0.13 %   | 99.72 %  |            0 |            0 |        0 |    0 |
| template1 | 0.00 %   | 99.55 %  |            0 |            0 |        0 |    0 |
| template0 | 0.00 %   | 0.00 %   |            0 |            0 |        0 |    0 |
| tsbs      | 0.11 %   | 99.92 %  |            0 |            0 |        0 |    0 |
+-----------+----------+----------+--------------+--------------+----------+------+


    建议:
        > 回滚比例大说明业务逻辑可能有问题, 命中率小说明shared_buffer要加大, 数据块读写时间长说明块设备的IO性能要提升, 死锁次数多说明业务逻辑有问题, 复制冲突次数多说明备库可能在跑LONG SQL.
	

###  检查数据库中索引膨胀情况:

+----------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+
|  数据库  |        SCHEMA        |       表名       | 表膨胀系数 |                            索引名                             | 索引膨胀系数 |
+----------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+
| postgres | pg_catalog           | pg_ts_config_map |        0.0 | pg_ts_config_map_index                                        |          2.0 |
| postgres | pg_catalog           | pg_amproc        |        0.0 | pg_amproc_fam_proc_index                                      |          1.7 |
| postgres | _timescaledb_catalog | tablespace       |        0.0 | tablespace_pkey                                               |          0.0 |
| postgres | _timescaledb_catalog | hypertable       |        0.0 | hypertable_associated_schema_name_associated_table_prefix_key |          0.0 |
| postgres | _timescaledb_catalog | hypertable       |        0.0 | hypertable_pkey                                               |          0.0 |
+----------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+

+--------+------------+------------------+------------+--------------------------------+--------------+
| 数据库 |   SCHEMA   |       表名       | 表膨胀系数 |             索引名             | 索引膨胀系数 |
+--------+------------+------------------+------------+--------------------------------+--------------+
| test   | pg_catalog | pg_ts_config_map |        0.0 | pg_ts_config_map_index         |          2.0 |
| test   | pg_catalog | pg_amproc        |        0.0 | pg_amproc_fam_proc_index       |          1.7 |
| test   | pg_catalog | pg_inherits      |        0.0 | pg_inherits_parent_index       |          0.0 |
| test   | pg_catalog | pg_attrdef       |        0.0 | pg_attrdef_oid_index           |          0.0 |
| test   | pg_catalog | pg_attrdef       |        0.0 | pg_attrdef_adrelid_adnum_index |          0.0 |
+--------+------------+------------------+------------+--------------------------------+--------------+

+--------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+
| 数据库 |        SCHEMA        |       表名       | 表膨胀系数 |                            索引名                             | 索引膨胀系数 |
+--------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+
| tsbs   | pg_catalog           | pg_ts_config_map |        0.0 | pg_ts_config_map_index                                        |          2.0 |
| tsbs   | pg_catalog           | pg_depend        |        0.0 | pg_depend_depender_index                                      |          1.1 |
| tsbs   | pg_catalog           | pg_amproc        |        0.0 | pg_amproc_fam_proc_index                                      |          1.7 |
| tsbs   | _timescaledb_catalog | tablespace       |        0.0 | tablespace_pkey                                               |          0.0 |
| tsbs   | _timescaledb_catalog | hypertable       |        0.0 | hypertable_associated_schema_name_associated_table_prefix_key |          0.0 |
+--------+----------------------+------------------+------------+---------------------------------------------------------------+--------------+


    建议:
        > 如果索引膨胀太大, 会影响性能, 建议重建索引, create index CONCURRENTLY....
	

###   检查数据库中垃圾数据情况:

+----------+-----------------------+--------------+------------+
|  数据库  |        SCHEMA         |     表名     | 死元组数量 |
+----------+-----------------------+--------------+------------+
| postgres | _timescaledb_internal | bgw_job_stat |         38 |
+----------+-----------------------+--------------+------------+

在数据库 test 中未查询到垃圾数据相关信息
+--------+-----------------------+--------------+------------+
| 数据库 |        SCHEMA         |     表名     | 死元组数量 |
+--------+-----------------------+--------------+------------+
| tsbs   | _timescaledb_internal | bgw_job_stat |         38 |
+--------+-----------------------+--------------+------------+


    建议:
        > 通常垃圾过多, 可能是因为无法回收垃圾, 或者回收垃圾的进程繁忙或没有及时唤醒, 或者没有开启autovacuum, 或在短时间内产生了大量的垃圾.
        可以等待autovacuum进行处理, 或者手工执行vacuum table.
	
### 数据库年龄:
+-----------+------+----------------+
|  数据库   | 年龄 |   年龄 剩余    |
+-----------+------+----------------+
| postgres  |  168 | 2.14748348e+09 |
| test      |  168 | 2.14748348e+09 |
| template1 |  168 | 2.14748348e+09 |
| template0 |  168 | 2.14748348e+09 |
| tsbs      |  168 | 2.14748348e+09 |
+-----------+------+----------------+


    建议:
        > 数据库的年龄正常情况下应该小于vacuum_freeze_table_age, 如果剩余年龄小于5亿, 建议人为干预, 将LONG SQL或事务杀掉后, 执行vacuum freeze.
	

### 表年龄:

+----------+---------+------------+---------+---------------+------+----------------+
|  数据库  | ROLNAME |  NSPNAME   | RELKIND |     表名      | 年龄 |   年龄 剩余    |
+----------+---------+------------+---------+---------------+------+----------------+
| postgres | fbase   | pg_toast   | t       | pg_toast_2604 |  168 | 2.14748348e+09 |
| postgres | fbase   | pg_toast   | t       | pg_toast_1247 |  168 | 2.14748348e+09 |
| postgres | fbase   | pg_catalog | r       | pg_type       |  168 | 2.14748348e+09 |
| postgres | fbase   | pg_toast   | t       | pg_toast_1255 |  168 | 2.14748348e+09 |
| postgres | fbase   | pg_toast   | t       | pg_toast_2606 |  168 | 2.14748348e+09 |
+----------+---------+------------+---------+---------------+------+----------------+

+--------+---------+------------+---------+---------------+------+----------------+
| 数据库 | ROLNAME |  NSPNAME   | RELKIND |     表名      | 年龄 |   年龄 剩余    |
+--------+---------+------------+---------+---------------+------+----------------+
| test   | fbase   | pg_toast   | t       | pg_toast_1247 |  168 | 2.14748348e+09 |
| test   | fbase   | pg_catalog | r       | pg_statistic  |  168 | 2.14748348e+09 |
| test   | fbase   | pg_catalog | r       | pg_type       |  168 | 2.14748348e+09 |
| test   | fbase   | pg_toast   | t       | pg_toast_1255 |  168 | 2.14748348e+09 |
| test   | fbase   | pg_toast   | t       | pg_toast_2604 |  168 | 2.14748348e+09 |
+--------+---------+------------+---------+---------------+------+----------------+

+--------+---------+------------+---------+---------------+------+----------------+
| 数据库 | ROLNAME |  NSPNAME   | RELKIND |     表名      | 年龄 |   年龄 剩余    |
+--------+---------+------------+---------+---------------+------+----------------+
| tsbs   | fbase   | pg_toast   | t       | pg_toast_1247 |  168 | 2.14748348e+09 |
| tsbs   | fbase   | pg_catalog | r       | pg_statistic  |  168 | 2.14748348e+09 |
| tsbs   | fbase   | pg_catalog | r       | pg_type       |  168 | 2.14748348e+09 |
| tsbs   | fbase   | pg_toast   | t       | pg_toast_1255 |  168 | 2.14748348e+09 |
| tsbs   | fbase   | pg_toast   | t       | pg_toast_2604 |  168 | 2.14748348e+09 |
+--------+---------+------------+---------+---------------+------+----------------+


    建议:
        > 表的年龄正常情况下应该小于vacuum_freeze_table_age, 如果剩余年龄小于5亿, 建议人为干预, 将LONG SQL或事务杀掉后, 执行vacuum freeze.
	
未查询到锁等待相关信息

    建议:
        > 锁等待状态, 反映业务逻辑的问题或者SQL性能有问题, 建议深入排查持锁的SQL.
	
### 密码泄露检查:
#### 检查 pg_authid：
+------+
| 计数 |
+------+
|    4 |
+------+

#### 检查 pg_user_mappings, pg_views：
未查询到pg_user_mappings中密码泄露相关信息
未查询到pg_views中密码泄露相关信息
以下是pg_authid相关检查结果：
未查询到pg_user_mappings中密码泄露相关信息
未查询到pg_views中密码泄露相关信息

    建议:
        > 如果以上输出显示密码已泄露, 尽快修改, 并通过参数避免密码又被记录到以上文件中(psql -n) (set log_statement='none'; set log_min_duration_statement=-1; set log_duration=off; set pg_stat_statements.track_utility=off;). 
        明文密码不安全, 建议使用create|alter role... encrypted password. 
        在fdw, dblink based view中不建议使用密码明文. 
        在recovery.*的配置中不要使用密码, 不安全, 可以使用.pgpass配置密码. 
	

### 获取复制槽状态信息

### 复制槽状态:
+---------------------+------------+------------+
|     复制槽名称      | 复制槽类型 | 复制槽状态 |
+---------------------+------------+------------+
| my_replication_slot | physical   | true       |
+---------------------+------------+------------+


    建议:
        > 若复制槽状态出现f，要及时处理，保留的 WAL 记录会占用磁盘空间，如果订阅端长时间无法跟上，主数据库的 WAL 文件会堆积，这可能会影响主数据库的性能和磁盘空间使用。
        请检查是否网络问题、服务器资源、数据库日志是否有复制冲突的问题。
	

### schema统计:

【postgres】库的schema: 

+--------------------------+-----------+-------+-----+
|        SCHEMANAME        |   BYTE    |  MB   | GB  |
+--------------------------+-----------+-------+-----+
| public                   | 226115584 | 215.6 | 0.2 |
| _timescaledb_catalog     |    450560 |   0.4 | 0.0 |
| timescaledb_experimental |         0 |   0.0 | 0.0 |
| information_schema       |    253952 |   0.2 | 0.0 |
| _timescaledb_config      |     57344 |   0.1 | 0.0 |
| pg_catalog               |  10018816 |   9.6 | 0.0 |
| timescaledb_information  |         0 |   0.0 | 0.0 |
| _timescaledb_internal    |     65536 |   0.1 | 0.0 |
| _timescaledb_cache       |         0 |   0.0 | 0.0 |
+--------------------------+-----------+-------+-----+

【test】库的schema: 

+--------------------+---------+-----+-----+
|     SCHEMANAME     |  BYTE   | MB  | GB  |
+--------------------+---------+-----+-----+
| information_schema |  253952 | 0.2 | 0.0 |
| pg_catalog         | 8871936 | 8.5 | 0.0 |
| public             | 7315456 | 7.0 | 0.0 |
+--------------------+---------+-----+-----+

【tsbs】库的schema: 

+--------------------------+-----------+-------+-----+
|        SCHEMANAME        |   BYTE    |  MB   | GB  |
+--------------------------+-----------+-------+-----+
| public                   | 216629248 | 206.6 | 0.2 |
| _timescaledb_catalog     |    450560 |   0.4 | 0.0 |
| timescaledb_experimental |         0 |   0.0 | 0.0 |
| information_schema       |    253952 |   0.2 | 0.0 |
| _timescaledb_config      |     57344 |   0.1 | 0.0 |
| pg_catalog               |   9035776 |   8.6 | 0.0 |
| timescaledb_information  |         0 |   0.0 | 0.0 |
| _timescaledb_internal    |     65536 |   0.1 | 0.0 |
| _timescaledb_cache       |         0 |   0.0 | 0.0 |
+--------------------------+-----------+-------+-----+


		建议:
			> 主要关注pg_catalog的大小，若pg_catalog太大，需要排查是哪个系统表出现膨胀导致的.
		

=====================================数据库巡检常规巡检项======================================


###  当前活跃度:

+---------------------+--------+-------+
|      当前时间       |  状态  | COUNT |
+---------------------+--------+-------+
| 2024-12-27 16:31:11 |        |     7 |
| 2024-12-27 16:31:11 | active |     3 |
| 2024-12-27 16:31:11 | idle   |     3 |
+---------------------+--------+-------+


    建议:
        > 如果active状态很多, 说明数据库比较繁忙. 如果idle in transaction很多, 说明业务逻辑设计可能有问题. 如果idle很多, 可能使用了连接池, 并且可能没有自动回收连接到连接池的最小连接数.
	

### 数据库连接信息:

+--------+------------+--------------------+--------------------+
| 总连接 | 已使用连接 | 剩余给超级用户连接 | 剩余给普通用户连接 |
+--------+------------+--------------------+--------------------+
|    100 |         13 |                 10 |                 77 |
+--------+------------+--------------------+--------------------+


    建议:
        > 给超级用户和普通用户设置足够的连接, 以免不能登录数据库.
	
+--------------------------------+
|           数据库版本           |
+--------------------------------+
| PostgreSQL 16.4 on             |
| x86_64-pc-linux-gnu, compiled  |
| by gcc (GCC) 4.8.5 20150623    |
| (Red Hat 4.8.5-44), 64-bit     |
+--------------------------------+


###  数据库插件版本:

+------------+-------------+------------+--------------+--------------+----------+
| 当前数据库 |  插件名称   | 插件所有者 | 插件命名空间 | 插件可重定位 | 插件版本 |
+------------+-------------+------------+--------------+--------------+----------+
| postgres   | plpgsql     | fbase      | pg_catalog   | false        |      1.0 |
| postgres   | timescaledb | fbase      | public       | false        | 2.16.1   |
| postgres   | postgis     | fbase      | public       | false        | 3.3.4    |
| test       | plpgsql     | fbase      | pg_catalog   | false        |      1.0 |
| test       | postgis     | fbase      | public       | false        | 3.3.4    |
| tsbs       | plpgsql     | fbase      | pg_catalog   | false        |      1.0 |
| tsbs       | timescaledb | fbase      | public       | false        | 2.16.1   |
+------------+-------------+------------+--------------+--------------+----------+


    建议:
        > 定期检查已安装插件的版本，及时更新插件以获取更好的功能支持、性能优化以及安全修复等。
	

###  用户使用了多少种数据类型:

+------------+--------------+------+
| 当前数据库 | 数据类型名称 | 数量 |
+------------+--------------+------+
| postgres   | int4         |  100 |
| postgres   | xid          |   88 |
| postgres   | cid          |   88 |
| postgres   | int8         |   87 |
| postgres   | name         |   86 |
| postgres   | oid          |   44 |
| postgres   | tid          |   44 |
| postgres   | bool         |   36 |
| postgres   | text         |   31 |
| postgres   | timestamptz  |   28 |
| postgres   | cstring      |   19 |
| postgres   | interval     |   11 |
| postgres   | int2         |   10 |
| postgres   | varchar      |    9 |
| postgres   | jsonb        |    7 |
| postgres   | regclass     |    5 |
| postgres   | regtype      |    3 |
| postgres   | _text        |    2 |
| postgres   | geometry     |    2 |
| postgres   | _bool        |    2 |
| postgres   | regrole      |    2 |
| postgres   | _int4        |    1 |
| postgres   | _name        |    1 |
| test       | int4         |    7 |
| test       | name         |    7 |
| test       | varchar      |    6 |
| test       | cid          |    2 |
| test       | geometry     |    2 |
| test       | xid          |    2 |
| test       | oid          |    1 |
| test       | bool         |    1 |
| test       | _int4        |    1 |
| test       | text         |    1 |
| test       | tid          |    1 |
| tsbs       | int4         |   90 |
| tsbs       | int8         |   85 |
| tsbs       | xid          |   80 |
| tsbs       | cid          |   80 |
| tsbs       | name         |   79 |
| tsbs       | tid          |   40 |
| tsbs       | oid          |   40 |
| tsbs       | bool         |   34 |
| tsbs       | text         |   30 |
| tsbs       | timestamptz  |   28 |
| tsbs       | cstring      |   19 |
| tsbs       | interval     |   11 |
| tsbs       | int2         |   10 |
| tsbs       | jsonb        |    7 |
| tsbs       | regclass     |    5 |
| tsbs       | regtype      |    3 |
| tsbs       | _text        |    2 |
| tsbs       | regrole      |    2 |
| tsbs       | _bool        |    2 |
| tsbs       | _name        |    1 |
+------------+--------------+------+


    建议:
        > 关注常用的数据类型，对于使用频率极低的数据类型可考虑是否合理，必要时进行优化调整。
	

###  用户创建了多少对象:

+------------+----------+--------------------------+----------+------+
| 当前数据库 | 角色名称 |       命名空间名称       | 对象类型 | 数量 |
+------------+----------+--------------------------+----------+------+
| postgres   | fbase    | _timescaledb_catalog     | i        |   36 |
| postgres   | fbase    | _timescaledb_catalog     | r        |   21 |
| postgres   | fbase    | timescaledb_information  | v        |   11 |
| postgres   | fbase    | _timescaledb_catalog     | S        |    8 |
| postgres   | fbase    | public                   | i        |    7 |
| postgres   | fbase    | _timescaledb_internal    | i        |    4 |
| postgres   | fbase    | public                   | r        |    4 |
| postgres   | fbase    | _timescaledb_internal    | r        |    3 |
| postgres   | fbase    | _timescaledb_cache       | r        |    3 |
| postgres   | fbase    | _timescaledb_config      | i        |    2 |
| postgres   | fbase    | public                   | S        |    2 |
| postgres   | fbase    | _timescaledb_internal    | v        |    2 |
| postgres   | fbase    | public                   | v        |    2 |
| postgres   | fbase    | public                   | c        |    2 |
| postgres   | fbase    | _timescaledb_internal    | S        |    1 |
| postgres   | fbase    | timescaledb_experimental | v        |    1 |
| postgres   | fbase    | _timescaledb_config      | S        |    1 |
| postgres   | fbase    | _timescaledb_config      | r        |    1 |
| test       | fbase    | public                   | v        |    2 |
| test       | fbase    | public                   | c        |    2 |
| test       | fbase    | public                   | r        |    1 |
| test       | fbase    | public                   | i        |    1 |
| tsbs       | fbase    | _timescaledb_catalog     | i        |   36 |
| tsbs       | fbase    | _timescaledb_catalog     | r        |   21 |
| tsbs       | fbase    | timescaledb_information  | v        |   11 |
| tsbs       | fbase    | _timescaledb_catalog     | S        |    8 |
| tsbs       | fbase    | public                   | i        |    5 |
| tsbs       | fbase    | _timescaledb_internal    | i        |    4 |
| tsbs       | fbase    | _timescaledb_cache       | r        |    3 |
| tsbs       | fbase    | _timescaledb_internal    | r        |    3 |
| tsbs       | fbase    | _timescaledb_config      | i        |    2 |
| tsbs       | fbase    | _timescaledb_internal    | v        |    2 |
| tsbs       | fbase    | _timescaledb_config      | r        |    1 |
| tsbs       | fbase    | timescaledb_experimental | v        |    1 |
| tsbs       | fbase    | _timescaledb_config      | S        |    1 |
| tsbs       | fbase    | public                   | S        |    1 |
| tsbs       | fbase    | public                   | r        |    1 |
| tsbs       | fbase    | _timescaledb_internal    | S        |    1 |
+------------+----------+--------------------------+----------+------+


    建议:
        > 定期查看用户创建对象的情况，对于过多或长期未使用的对象可考虑清理，以优化数据库空间和性能。
	

###  用户对象占用空间的柱状图:

+------------+--------+----------------+----------------------+----------------------+
| 当前数据库 | 桶编号 | 此桶中关系数量 | 桶最小值（格式化后） | 桶最大值（格式化后） |
+------------+--------+----------------+----------------------+----------------------+
| postgres   |      1 |            105 | 0 bytes              | 6896 kB              |
| postgres   |      3 |              5 | 24 MB                | 24 MB                |
| postgres   |     10 |              1 | 89 MB                | 89 MB                |
| test       |      1 |              5 | 0 bytes              | 208 kB               |
| test       |     10 |              1 | 6896 kB              | 6896 kB              |
| tsbs       |      1 |             95 | 0 bytes              | 16 kB                |
| tsbs       |      3 |              5 | 24 MB                | 24 MB                |
| tsbs       |     10 |              1 | 89 MB                | 89 MB                |
+------------+--------+----------------+----------------------+----------------------+


    建议:
        > 关注用户对象占用空间情况，对于占用空间较大的对象可考虑优化存储结构或进行归档处理，以节省数据库空间。
	

###  表空间使用情况:

+------------+------------+------------+
|  表空间名  | 表空间路径 | 表空间大小 |
+------------+------------+------------+
| pg_default |            | 471 MB     |
| pg_global  |            | 565 kB     |
+------------+------------+------------+


    建议:
        > 注意检查表空间所在文件系统的剩余空间, (默认表空间在$PGDATA/base目录下), IOPS分配是否均匀, OS的sysstat包可以观察IO使用率.
	

###  数据库使用情况:

+-----------+------------+
|  数据库   | 数据库大小 |
+-----------+------------+
| postgres  | 226 MB     |
| tsbs      | 216 MB     |
| test      | 15 MB      |
| template1 | 7708 kB    |
| template0 | 7473 kB    |
+-----------+------------+


    建议:
        > 注意检查数据库的大小，是否需要清理历史数据。
	

###  用户连接数限制:

+---------+--------------+------------------------+
| 用户名  | 用户连接限制 | 当前用户已使用的连接数 |
+---------+--------------+------------------------+
| fbase   |           -1 |                      7 |
| repuser |           -1 |                      1 |
+---------+--------------+------------------------+


    建议:
        > 给用户设置足够的连接数，使用alter role... CONNECTION LIMIT来设置。
	

###  数据库连接数限制:

+----------+----------------+------------------+
|  数据库  | 数据库连接限制 | 数据库已使用连接 |
+----------+----------------+------------------+
| postgres |             -1 |                4 |
| tsbs     |             -1 |                1 |
+----------+----------------+------------------+


    建议:
        > 给数据库设置足够的连接数，使用alter database... CONNECTION LIMIT来设置。
	

###  数据库检查点和bgwriter统计信息:

+-------------------+-----------------+-----------------------+----------------------+--------------------+---------------+------------------+-----------------+-----------------------+---------------+---------------------+
| CHECKPOINTS TIMED | CHECKPOINTS REQ | CHECKPOINT WRITE TIME | CHECKPOINT SYNC TIME | BUFFERS CHECKPOINT | BUFFERS CLEAN | MAXWRITTEN CLEAN | BUFFERS BACKEND | BUFFERS BACKEND FSYNC | BUFFERS ALLOC |     STATS RESET     |
+-------------------+-----------------+-----------------------+----------------------+--------------------+---------------+------------------+-----------------+-----------------------+---------------+---------------------+
|                79 |              14 | 1.899231e+06          |                  100 |              34277 |             0 |                0 |           32443 |                     0 |         48122 | 2024-12-10 14:30:21 |
+-------------------+-----------------+-----------------------+----------------------+--------------------+---------------+------------------+-----------------+-----------------------+---------------+---------------------+


    建议:
        > 如果检测结果显示checkpoint_write_time多，说明检查点持续时间长，检查点过程中产生了较多的脏页。
        > checkpoint_sync_time代表检查点开始时的shared buffer中的脏页被同步到磁盘的时间，如果时间过长，并且数据库在检查点时性能较差，考虑一下提升块设备的IOPS能力。
        > buffers_backend_fsync太多说明需要加大shared buffer 或者 减小bgwriter_delay参数。
	

### 长事务和2PC相关信息:


##### 长事务相关信息:

+----------+--------+--------------------------------+---------------------+-----------------+---------------------+-----------------+--------+
| 数据库名 | 用户名 |            查询语句            |    事务开始时间     |  事务持续时间   |    查询开始时间     |  查询持续时间   |  状态  |
+----------+--------+--------------------------------+---------------------+-----------------+---------------------+-----------------+--------+
| postgres | fbase  | delete from test_data where id | 2024-12-27 15:36:01 | 00:55:10.046062 | 2024-12-27 15:36:10 | 00:55:00.711687 | active |
|          |        | = 4;                           |                     |                 |                     |                 |        |
+----------+--------+--------------------------------+---------------------+-----------------+---------------------+-----------------+--------+


#### 2PC相关信息:

+-----------+------------+---------------------+----------+----------+-----------------+
| 2PC事务ID | 2PC事务GID |      开始时间       | 所属用户 | 数据库名 |   2PC持续时间   |
+-----------+------------+---------------------+----------+----------+-----------------+
|       887 | gid_name   | 2024-12-27 15:37:31 | fbase    | postgres | 00:53:39.914018 |
|       890 | gid_name1  | 2024-12-27 15:43:04 | fbase    | postgres | 00:48:07.516704 |
+-----------+------------+---------------------+----------+----------+-----------------+


    建议:
        > 长事务过程中产生的垃圾，无法回收，建议不要在数据库中运行LONG SQL，或者错开DML高峰时间去运行LONG SQL。2PC事务一定要记得尽快结束掉，否则可能会导致数据库膨胀。
	

###  用户密码到期时间信息:

+-----------------------------+------------------------+
|           用户名            |      密码到期时间      |
+-----------------------------+------------------------+
| newuser                     | 2024-12-28 08:00:00+08 |
| pg_read_all_data            | 无有效期               |
| pg_write_all_data           | 无有效期               |
| pg_monitor                  | 无有效期               |
| pg_read_all_settings        | 无有效期               |
| pg_read_all_stats           | 无有效期               |
| pg_stat_scan_tables         | 无有效期               |
| pg_read_server_files        | 无有效期               |
| pg_write_server_files       | 无有效期               |
| pg_execute_server_program   | 无有效期               |
| pg_signal_backend           | 无有效期               |
| pg_checkpoint               | 无有效期               |
| pg_use_reserved_connections | 无有效期               |
| pg_create_subscription      | 无有效期               |
| test                        | 无有效期               |
| repuser                     | 无有效期               |
| pg_database_owner           | 无有效期               |
| fbase                       | 无有效期               |
+-----------------------------+------------------------+


    建议:
        > 到期后，用户将无法登陆，记得修改密码，同时将密码到期时间延长到某个时间或无限时间，使用alter role... VALID UNTIL 'timestamp'。
	

### 表的继承关系检查相关信息:

+--------------+--------------+------------+
| 继承关系表ID |    父表ID    | 继承顺序号 |
+--------------+--------------+------------+
| child_table  | parent_table |          1 |
+--------------+--------------+------------+


    建议:
        > 如果使用继承来实现分区表，注意分区表的触发器中逻辑是否正常，对于时间模式的分区表是否需要及时加分区，修改触发器函数。
        > 建议继承表的权限统一，如果权限不一致，可能导致某些用户查询时权限不足。
	

###  是否开启归档、自动垃圾回收相关设置信息:

+-----------------+--------+
|      名称       | 设置值 |
+-----------------+--------+
| archive_command | date   |
| archive_mode    | on     |
| autovacuum      | on     |
+-----------------+--------+


    建议:
        > 如果当前的wal文件和最后一个归档失败的wal文件之间相差很多个文件，建议尽快排查归档失败的原因，以便修复，否则pg_wal目录可能会撑爆。
	

###  数据库主备角色:

+----------------+
| 数据库主备角色 |
+----------------+
| 主库           |
+----------------+


###  备库信息:

+---------+--------------+-------------+
| 用户名  | 应用程序名称 | 客户端地址  |
+---------+--------------+-------------+
| repuser | walreceiver  | 192.168.6.1 |
+---------+--------------+-------------+

